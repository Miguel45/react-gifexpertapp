{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","React","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","response","json","data","gifs","map","id","title","images","downsized_medium","GridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","gifts","useFetchGifs","img","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,IAAMC,SAHzB,IAE6B,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BT,GAAc,SAAAU,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAbS,MAkBb,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,uDAFX,mCAEW,cAEkDC,UAAUH,GAF5D,qBAGII,MAAOF,GAHX,cAGbG,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,YACnB,MAAO,CACHC,GAFkE,EAAjDA,GAGjBC,MAHkE,EAA7CA,MAIrBT,IAJkE,EAAtCU,OAASC,iBAAkBX,QAN5C,8BAcRM,IAdQ,4CAAH,sDCAPM,EAAW,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAC7B,OACI,sBAAKa,UAAU,OAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCDHO,EAAW,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECFd,SAACA,GAAc,IAAD,EAEZf,IAAMC,SAAS,CACrCqB,KAAM,GACNY,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KActC,OAPApC,IAAMqC,WAAU,WACZvB,EAAQC,GAAUuB,MAAK,SAAAC,GAAK,OAAIH,EAAS,CACrCd,KAAMiB,EACNL,SAAS,SAEd,CAACnB,IAEGoB,EDV0BK,CAAazB,GAAjCY,EAFyB,EAE9BL,KAAaY,EAFiB,EAEjBA,QAErB,OACI,qCACI,mCAAMnB,EAAN,OAEA,oBAAIe,UAAU,mCAAd,SAAmDI,GAAW,gBAE9D,qBAAKJ,UAAU,8CAAf,SAEQH,EAAOH,KAAI,SAACiB,GAAD,OAAS,cAAC,EAAD,eAA2BA,GAAZA,EAAIhB,aEb9CiB,EAAgB,WAAO,IAAD,EAEK1C,IAAMC,SAAS,CAAC,YAAa,YAAa,gBAF/C,mBAExB0C,EAFwB,KAEZ5C,EAFY,KAI/B,OACI,qCAEG,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACK4C,EAAWnB,KAAK,SAAEnB,GAAF,OAAS,cAAC,EAAD,CAAoBU,SAAWV,GAAfA,Y,MCTzDuC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.75cb86f0.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst defaultValue = '';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = React.useState(defaultValue)\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue(defaultValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <input\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","const key = 'GGFq1XjY7jVp2GBy9ddaKBu6f5ZhJMQ0'\r\n\r\nexport const getGift = async (category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${encodeURI(category)}&limit=6`;\r\n    const response = await fetch( url );\r\n    const {data} = await response.json();\r\n\r\n    const gifs = data.map( ({id, title, images: {downsized_medium:{url}}}) => {\r\n        return { \r\n            id,\r\n            title,\r\n            url \r\n        }\r\n    })\r\n    \r\n    return [...gifs];\r\n}","import React from 'react'\r\n\r\nexport const GridItem = ({title, url}) => {\r\n    return (\r\n        <div className='card'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GridItem } from './GridItem'\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n\r\n            <h4 className=\"animate__animated animate__flash\">{ loading && 'Cargando...' }</h4>\r\n        \r\n            <div className='card-grid animate__animated animate__fadeIn'>\r\n                {\r\n                    images.map((img) => <GridItem key={img.id} {...img} />)\r\n                }\r\n            </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { getGift } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = React.useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        getGift(category).then(gifts => setstate({\r\n            data: gifts,\r\n            loading: false\r\n        }))\r\n    }, [category])\r\n    \r\n    return state\r\n}","import React from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GiftGrid } from './components/GiftGrid'\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = React.useState(['One Punch', 'Samurai X', 'Dragon Ball']);\r\n\r\n    return (\r\n        <>\r\n\r\n           <h2>GiftExpertApp</h2> \r\n           <AddCategory setCategories={setCategories}/>\r\n           <hr/>\r\n\r\n           <ol>\r\n               {categories.map( ( e ) => <GiftGrid key={ e } category={ e } />) } \r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GiftExpertApp } from './GiftExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}